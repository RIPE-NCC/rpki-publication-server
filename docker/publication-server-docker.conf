#
# Docker specific application settings and environment variables as overrides.
# ${?ENV_VAR} syntax overrides with ENV_VAR if the environment variable exists.
#

publication {
  port = 7766

  # Set up TLS and client authentication as described in the README
  #
  # put the certificate in a keystore and specify it's filename and password below
  # use the same password for the certificate and for the keystore
  server.keystore.location = ""
  server.keystore.location = ${?KEYSTORE_PATH}
  server.keystore.password = ""
  server.keystore.password = ${?KEYSTORE_PASSWORD}
  # if you use HTTPS and want to verify client's certificates, add them to the truststore
  # and specify it's filename and password here
  server.truststore.location = ""
  server.truststore.location = ${?TRUSTSTORE_PATH}
  server.truststore.password = ""
  server.truststore.password = ${?TRUSTSTORE_PASSWORD}
}

# Base URL of the publication server
locations.rrdp.repository.uri = "https://rrdp.ripe.net"
locations.rrdp.repository.uri = ${?RRDP_REPOSITORY_URI}

#
# Configure how the rrdp urls are mapped to the filesystem
#
locations.rsync = {
  staging-dir-name = "working"
  online-dir-name  = "online"
  directory-permissions = "rwxrwxr-x"
  file-permissions = "rw-rw-r--"
  repository-mapping = [
    {"rsync://localhost:10873/ta/": "/data/rsync/ta"},
    {"rsync://localhost:10873/repository/": "/data/rsync/repository"}
  ]
}

#
# Defaults for container, no need to adjust
#

# listen on ipv4 only
server.address="0.0.0.0"

xodus = {
  path = "/data/db/"
  path = ${?DATABASE_PATH}
}

locations.rrdp.repository.path = "/data/rrdp"
locations.rrdp.repository.path = ${?RRDP_REPOSITORY_PATH}
