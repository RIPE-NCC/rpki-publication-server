publication {
  port = 7766
  # Set up TLS and client authentication as described in the README
  #
  # put the certificate in a keystore and specify it's filename and password below
  # use the same password for the certificate and for the keystore
  server.keystore.location = ""
  server.keystore.password = ""
  # if you use HTTPS and want to verify client's certificates, add them to the truststore
  # and specify it's filename and password here
  server.truststore.location = ""
  server.truststore.password = ""

  server.repository-write-interval = 120s

  # Maximum entity size, only applied to endpoints where needed, preferibly behind client tls
  max-entity-size = 512M
}

server.address="::0"
rrdp.port = 7788

spray.can.host-connector {
  # The maximum number of parallel connections that an `HttpHostConnector`
  # is allowed to establish to a host. Must be greater than zero.
  max-connections = 1024

  # If this setting is enabled, the `HttpHostConnector` pipelines requests
  # across connections, otherwise only one single request can be "open"
  # on a particular HTTP connection.
  pipelining = on

  # The time after which an idle `HttpHostConnector` (without open
  # connections) will automatically terminate itself.
  # Set to `infinite` to completely disable idle timeouts.
  idle-timeout = 30s
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  jvm-exit-on-fatal-error = on
  http {
    routing.decode-max-size = "256m"
    server {
      parsing.max-content-length = "256m"
      # docs: It is recommended to use a larger statically configured timeout
      # (as a “safety net” against programming errors or malicious attackers)
      # and if needed tighten it using the directives – not the other way
      # around.
      request-timeout = 60s
    }
  }
}

postgresql = {
    user = "pubserver"
    user = ${?POSTGRES_USER}
    password = "pubserver"
    password = ${?POSTGRES_PASSWORD}
    url = "jdbc:postgresql://localhost:5432/pubserver"
    url = ${?POSTGRES_URL}
}

# the following options should stay in the x.y.z format
# otherwise they couldn't be parsed by the initializing
# shell script
locations.logfile = ../log/publication-server.log
locations.gclogfile = ../log/gc.log

jvm.memory.initial = 512m      # -Xms jvm option -> initial memory claimed by the jvm
jvm.memory.maximum = 2048m     # -Xmx jvm option -> maximum memory for the jvm

locations.rrdp.repository.path = ../data
locations.rrdp.repository.uri = "http://localhost:7788"

# time to keep unreferenced files to allow clients to continue downloading them
unpublished-file-retain-period = 60m

default.timeout = 10m

# minimum snapshot size to indicate readiness of server
minimum.snapshot.objects.count = 50000
