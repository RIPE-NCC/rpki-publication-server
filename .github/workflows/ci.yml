name: Scala build and test
on: [push, pull_request]

jobs:
  # Label of the container job
  sbt-build-test:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: mozilla/sbt

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: pubserver_test
          POSTGRES_USER: pubserver
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Cache ivy cache
        id: ivy-cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2
            ~/.sbt
          key: ${{ runner.os }}--${{ hashFiles('build.sbt') }}

      - name: Compile
        run: sbt compile
        env:
          POSTGRES_URL: "jdbc:postgresql://postgres:5432/pubserver_test"
          POSTGRES_PASSWORD: postgres
          CI_COMMIT_SHA: "${GITHUB_SHA}"

      - name: Test & package
        run: sbt coverage test coverageReport
        env:
          POSTGRES_URL: "jdbc:postgresql://postgres:5432/pubserver_test"
          POSTGRES_PASSWORD: postgres
          CI_COMMIT_SHA: "${GITHUB_SHA}"

      - name: Package
        run: sbt assembly
        env:
          POSTGRES_URL: "jdbc:postgresql://postgres:5432/pubserver_test"
          POSTGRES_PASSWORD: postgres
          CI_COMMIT_SHA: "${GITHUB_SHA}"

      - name: Upload jar
        uses: actions/upload-artifact@v2
        with:
          name: rpki-publication-server-jar
          path: target/rpki-publication-server.*

      - name: Upload reports
        uses: actions/upload-artifact@v2
        with:
          name: reports
          path: |
            target/scoverage-report/**/*
            target/test-reports/**/*

  docker:
    runs-on: ubuntu-latest
    needs: sbt-build-test
    if: ${{ github.ref == 'refs/heads/main' }}

    steps:
      - name: checkout sources
        uses: actions/checkout@v2

      - name: Fetch jar
        uses: actions/download-artifact@v2
        with:
          name: rpki-publication-server-jar

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build_publication_server
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ripencc/rpki-publication-server:latest
          labels: "org.label-schema.vcs-ref=${{ github.sha }}"
          build-args: |
            PUBLICATION_SERVER_JAR=./rpki-publication-server.jar

      - name: Image digest
        run: echo ${{ steps.docker_build_publication_server.outputs.digest }}
